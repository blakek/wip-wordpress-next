diff nextjs/src/theme/index.ts wordpress-next/packages/site/theme/index.ts
1c1
< import { normalize, transparentize } from 'polished';
---
> import { normalize } from 'polished';
12,25c12,13
<   backgroundOrange: '#f26825',
<   backgroundRed: '#eb3c35',
<   black: '#111111',
<   blueGrey: '#485660',
<   darkGrey: '#727272',
<   gold: '#edb026',
<   grey: '#505050',
<   lightGrey: '#dcdcdc',
<   midGrey: '#ababab',
<   offWhite: '#f8f8f8',
<   orange: '#e15f2c',
<   red: '#e51b24',
<   softBlack: '#242424',
<   softGrey: '#f3f3f3',
---
>   red: '#e45b66',
>   tan: '#e2c58c',
28c16,24
<   yellow: '#e5ad2f'
---
>   gray100: '#050000',
>   gray200: '#0a0808',
>   gray300: '#404040',
>   gray400: '#646464',
>   gray500: '#8e8e8e',
>   gray600: '#aeaeae',
>   gray700: '#d6d6d6',
>   gray800: '#ebebeb',
>   gray900: '#f2f2f2'
33c29
<   primary: palette.red,
---
>   primary: palette.gray200,
35,38c31,32
<   secondary: palette.blueGrey,
<   onSecondary: palette.white,
<   accent: palette.yellow,
<   onAccent: palette.softBlack,
---
>   accent: palette.tan,
>   onAccent: palette.gray200,
40c34
<   dark: palette.blueGrey,
---
>   dark: palette.gray300,
42,43c36,39
<   darken: palette.offWhite,
<   textDark: palette.darkGrey,
---
>   darken: palette.gray800,
>   onDarken: palette.gray100,
>   textDark: palette.gray200,
>   textDarker: palette.gray100,
47a44,46
>   card: `1px solid ${colors.gray800}`,
>   control: `1px solid ${colors.gray700}`,
>   controlActive: `2px solid ${colors.primary}`,
54c53,54
<   heading: 'inherit',
---
>   heading:
>     'Roboto Condensed, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
72c72
<   button: 900,
---
>   button: 700,
74c74
<   display: 900
---
>   display: 700
85,86c85,86
<   sm: '2px',
<   md: '6px'
---
>   sm: '4px',
>   md: '8px'
140,154c140,144
<   accentN: `0 -${space[4]} 0 0 ${colors.accent}`,
<   accentS: `0 ${space[4]} 0 0 ${colors.accent}`,
<   accentE: `${space[4]} 0 0 0 ${colors.accent}`,
<   accentW: `-${space[4]} 0 0 0 ${colors.accent}`,
<   accentNE: `${space[4]} -${space[4]} 0 0 ${colors.accent}`,
<   accentNW: `-${space[4]} -${space[4]} 0 0 ${colors.accent}`,
<   accentSE: `${space[4]} ${space[4]} 0 0 ${colors.accent}`,
<   accentSW: `-${space[4]} ${space[4]} 0 0 ${colors.accent}`,
<   default: '0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 2px 0 rgba(0, 0, 0, 0.1)',
<   md: '4px 4px 8px 0 rgba(0, 0, 0, 0.2)',
<   lg: '0 10px 15px -3px rgba(0, 0, 0, 0.2), 0 4px 6px -2px rgba(0, 0, 0, 0.1)',
<   nav: `0 4px 10px 0 rgba(1, 0, 0, 0.07)`,
<   inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',
<   outline: `0 0 0 3px ${colors.accent}`,
<   none: 'none'
---
>   default: `0 2px 10px 0 rgba(0,0,0,0.13);`,
>   nav: `0 1px 0 0 ${colors.gray800}`,
>   none: 'none',
>   outline: `0 0 0 2px ${colors.primary}`,
>   thinOutline: `0 0 0 1px ${colors.gray700}`
170a161,167
> export const zIndices = {
>   lower: -1,
>   higher: 1,
>   dialog: 100,
>   menu: 90
> };
>
183c180
<     font-size: 18px;
---
>     font-size: 16px;
198,204d194
<   code:not([class]) {
<     background-color: ${colors.softGrey};
<     border-radius: ${radii.md};
<     color: ${transparentize(0.35, colors.primary)};
<     padding: 0.1em 0.2em;
<   }
<
229a220,240
>   label:not([class]){
>     padding-bottom: ${space[2]};
>   }
>
>   input:not([class]) {
>     border: ${borders.control};
>     border-radius: ${radii.sm};
>     display: block;
>     outline: none;
>     padding-bottom: ${space[2]};
>     padding-left: ${space[3]};
>     padding-right: ${space[3]};
>     padding-top: ${space[2]};
>     width: 100%;
>
>     :focus {
>       border-color: transparent;
>       box-shadow: ${shadows.outline};
>     }
>   }
>
241a253
>   borders,
256c268,269
<   textStyles
---
>   textStyles,
>   zIndices
diff nextjs/src/theme/mixins.ts wordpress-next/packages/site/theme/mixins.ts
14c14
<     if (!propValue) return '';
---
>     if (propValue === undefined || propValue === null) return '';
40a41,45
> export const boxMixins = css`
>   ${createRuleForProp('display', '', '$display')}
>   ${createRuleForProp('position', '', '$position')}
> `;
>
43c48
<   ${createRuleForProp('flex-basis', '', '$basis')}
---
>   ${createRuleForProp('flex-basis', 'theme.sizes', '$basis')}
64c69,77
<   ${createRuleForProp('background-color', 'theme.colors', '$bg')}
---
>   ${createRuleForProp('background', 'theme.colors', '$bg')}
>   ${createRuleForProp('background-attachment', '', '$bgAttachment')}
>   ${createRuleForProp('background-clip', '', '$bgClip')}
>   ${createRuleForProp('background-color', 'theme.colors', '$bgColor')}
>   ${createRuleForProp('background-image', '', '$bgImage')}
>   ${createRuleForProp('background-origin', '', '$bgOrigin')}
>   ${createRuleForProp('background-position', '', '$bgPosition')}
>   ${createRuleForProp('background-repeat', '', '$bgRepeat')}
>   ${createRuleForProp('background-size', '', '$bgSize')}
114a128
>   ${boxMixins}
diff nextjs/src/theme/types.ts wordpress-next/packages/site/theme/types.ts
1,2c1,2
< import React from 'react';
< export type CommonCSSValues = 'inherit' | 'initial' | 'unset';
---
> import React, { CSSProperties } from 'react';
> import { DefaultTheme } from 'styled-components';
4,64c4,10
< export type BreakpointNumber = number | number[];
< export type BreakpointString = string | string[];
< export type BreakpointRule = number | string | Array<BreakpointRule>;
<
< export type TextAlignment =
<   | '-moz-center'
<   | '-webkit-center'
<   | 'center'
<   | 'end'
<   | 'justify-all'
<   | 'justify'
<   | 'left'
<   | 'match-parent'
<   | 'right'
<   | 'start'
<   | string
<   | CommonCSSValues
<   | TextAlignment[];
<
< export type CommonFlexRules =
<   | 'center'
<   | 'end'
<   | 'flex-end'
<   | 'flex-start'
<   | 'normal'
<   | 'safe center'
<   | 'start'
<   | 'stretch'
<   | 'unsafe center'
<   | CommonCSSValues;
<
< export type FlexAlignment =
<   | 'baseline'
<   | 'first baseline'
<   | 'last baseline'
<   | CommonFlexRules
<   | FlexAlignment[];
<
< export type FlexDirection =
<   | 'column-reverse'
<   | 'column'
<   | 'row-reverse'
<   | 'row'
<   | CommonCSSValues
<   | FlexDirection[];
<
< export type FlexJustification =
<   | 'left'
<   | 'right'
<   | 'space-around'
<   | 'space-between'
<   | 'space-evenly'
<   | CommonFlexRules
<   | FlexJustification[];
<
< export type FlexWrap =
<   | 'nowrap'
<   | 'wrap'
<   | 'wrap-reverse'
<   | CommonCSSValues
<   | FlexWrap[];
---
> export type ResponsiveRule<T> = T | T[];
> export type ThemeKey<K extends keyof DefaultTheme> = keyof DefaultTheme[K];
>
> export interface BoxMixinProps {
>   $display?: ResponsiveRule<CSSProperties['display']>;
>   $position?: ResponsiveRule<CSSProperties['position']>;
> }
67,72c13,18
<   $alignSelf?: CommonFlexRules;
<   $basis?: BreakpointString;
<   $flex?: BreakpointString;
<   $grow?: BreakpointRule;
<   $justifySelf?: CommonFlexRules;
<   $shrink?: BreakpointRule;
---
>   $alignSelf?: ResponsiveRule<CSSProperties['alignSelf']>;
>   $basis?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['flexBasis']>;
>   $flex?: ResponsiveRule<CSSProperties['flex']>;
>   $grow?: ResponsiveRule<CSSProperties['flexGrow']>;
>   $justifySelf?: ResponsiveRule<CSSProperties['justifySelf']>;
>   $shrink?: ResponsiveRule<CSSProperties['flexShrink']>;
76,82c22,25
<   $alignItems?: FlexAlignment;
<
<   $justifyContent?: FlexJustification;
<
<   $direction?: FlexDirection;
<
<   $wrap?: FlexWrap;
---
>   $alignItems?: ResponsiveRule<CSSProperties['alignItems']>;
>   $justifyContent?: ResponsiveRule<CSSProperties['justifyContent']>;
>   $direction?: ResponsiveRule<CSSProperties['flexDirection']>;
>   $wrap?: ResponsiveRule<CSSProperties['flexWrap']>;
86,87c29,32
<   $border?: BreakpointString;
<   $borderRadius?: BreakpointRule;
---
>   $border?: ResponsiveRule<ThemeKey<'borders'> | CSSProperties['border']>;
>   $borderRadius?: ResponsiveRule<
>     ThemeKey<'radii'> | CSSProperties['borderRadius']
>   >;
91,92c36,47
<   $bg?: BreakpointString;
<   $color?: BreakpointString;
---
>   $bg?: ResponsiveRule<ThemeKey<'colors'> | CSSProperties['background']>;
>   $bgAttachment?: ResponsiveRule<CSSProperties['backgroundAttachment']>;
>   $bgClip?: ResponsiveRule<CSSProperties['backgroundClip']>;
>   $bgColor?: ResponsiveRule<
>     ThemeKey<'colors'> | CSSProperties['backgroundColor']
>   >;
>   $bgImage?: ResponsiveRule<CSSProperties['backgroundImage']>;
>   $bgOrigin?: ResponsiveRule<CSSProperties['backgroundOrigin']>;
>   $bgPosition?: ResponsiveRule<CSSProperties['backgroundPosition']>;
>   $bgRepeat?: ResponsiveRule<CSSProperties['backgroundRepeat']>;
>   $bgSize?: ResponsiveRule<CSSProperties['backgroundSize']>;
>   $color?: ResponsiveRule<ThemeKey<'colors'> | CSSProperties['color']>;
96,102c51,61
<   $font?: BreakpointString;
<   $fontSize?: BreakpointRule;
<   $fontStyle?: BreakpointString;
<   $fontWeight?: BreakpointRule;
<   $lineHeight?: BreakpointRule;
<   $textAlign?: TextAlignment;
<   $textTransform?: BreakpointString;
---
>   $font?: ResponsiveRule<ThemeKey<'fonts'> | CSSProperties['fontFamily']>;
>   $fontSize?: ResponsiveRule<ThemeKey<'fontSizes'> | CSSProperties['fontSize']>;
>   $fontStyle?: ResponsiveRule<CSSProperties['fontStyle']>;
>   $fontWeight?: ResponsiveRule<
>     ThemeKey<'fontWeights'> | CSSProperties['fontWeight']
>   >;
>   $lineHeight?: ResponsiveRule<
>     ThemeKey<'lineHeights'> | CSSProperties['lineHeight']
>   >;
>   $textAlign?: ResponsiveRule<CSSProperties['textAlign']>;
>   $textTransform?: ResponsiveRule<CSSProperties['textTransform']>;
106,107c65,68
<   $shadow?: BreakpointString;
<   $textShadow?: BreakpointString;
---
>   $shadow?: ResponsiveRule<ThemeKey<'shadows'> | CSSProperties['boxShadow']>;
>   $textShadow?: ResponsiveRule<
>     ThemeKey<'shadows'> | CSSProperties['textShadow']
>   >;
111,117c72,78
<   $flexBasis?: BreakpointRule;
<   $height?: BreakpointRule;
<   $maxHeight?: BreakpointRule;
<   $maxWidth?: BreakpointRule;
<   $minHeight?: BreakpointRule;
<   $minWidth?: BreakpointRule;
<   $width?: BreakpointRule;
---
>   $flexBasis?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['flexBasis']>;
>   $height?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['height']>;
>   $maxHeight?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['maxHeight']>;
>   $maxWidth?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['maxWidth']>;
>   $minHeight?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['minHeight']>;
>   $minWidth?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['minWidth']>;
>   $width?: ResponsiveRule<ThemeKey<'sizes'> | CSSProperties['width']>;
121,134c82,95
<   $m?: BreakpointRule;
<   $mb?: BreakpointRule;
<   $ml?: BreakpointRule;
<   $mr?: BreakpointRule;
<   $mt?: BreakpointRule;
<   $mx?: BreakpointRule;
<   $my?: BreakpointRule;
<   $p?: BreakpointRule;
<   $pb?: BreakpointRule;
<   $pl?: BreakpointRule;
<   $pr?: BreakpointRule;
<   $pt?: BreakpointRule;
<   $px?: BreakpointRule;
<   $py?: BreakpointRule;
---
>   $m?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['margin']>;
>   $mb?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['marginBottom']>;
>   $ml?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['marginLeft']>;
>   $mr?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['marginRight']>;
>   $mt?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['marginTop']>;
>   $mx?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['marginLeft']>;
>   $my?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['marginTop']>;
>   $p?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['padding']>;
>   $pb?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['paddingBottom']>;
>   $pl?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['paddingLeft']>;
>   $pr?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['paddingRight']>;
>   $pt?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['paddingTop']>;
>   $px?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['paddingLeft']>;
>   $py?: ResponsiveRule<ThemeKey<'space'> | CSSProperties['paddingTop']>;
142,150c103,113
< export type ThemeMixinProps = FlexChildProps &
<   FlexContainerProps &
<   ThemeBordersMixinProps &
<   ThemeColorsMixinProps &
<   ThemeFontsMixinProps &
<   ThemeShadowsMixinProps &
<   ThemeSizeMixinProps &
<   ThemeSpaceMixinProps &
<   BaseComponentProps;
---
> export interface ThemeMixinProps
>   extends BoxMixinProps,
>     BaseComponentProps,
>     FlexChildProps,
>     FlexContainerProps,
>     ThemeBordersMixinProps,
>     ThemeColorsMixinProps,
>     ThemeFontsMixinProps,
>     ThemeShadowsMixinProps,
>     ThemeSizeMixinProps,
>     ThemeSpaceMixinProps {}
